16. 3Sum Closest
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

Time complexity:
O(n^2) use two pointers and focus on each element to find the closest value.

public class Solution {
    public int threeSumClosest(int[] nums, int target) {
    	if(nums.length<3) return 0;
    	Arrays.sort(nums);
    	int best=nums[0]+nums[1]+nums[2];
    	for(int i=0;i<nums.length-2;i++){
    		int left=i+1;
    		int right=nums.length-1;
    		
    		while(left<right){
    			int sum=nums[i]+nums[left]+nums[right];
    			if(Math.abs(target-sum)<Math.abs(target-best)){
    				best=sum;
    			}
    			if(sum<target){
    				left++;
    			}
    			else{
    				right--;
    			}
    		}
    	}
    	return best;
    }
}