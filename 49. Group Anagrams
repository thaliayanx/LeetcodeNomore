49. Group Anagrams

Given an array of strings, group anagrams together.

For example, given: ["eat", "tea", "tan", "ate", "nat", "bat"], 
Return:

[
  ["ate", "eat","tea"],
  ["nat","tan"],
  ["bat"]
]

Sort hashTable
时间 O(NKlogK) 空间 O(N)

判断两个词是否是变形词，最简单的方法是将两个词按字母排序，看结果是否相同。这题中我们要将所有同为一个变形词词根的词归到一起，最快的方法则是用哈希表。所以这题就是结合哈希表和排序。我们将每个词排序后，根据这个键值，找到哈希表中相应的列表，并添加进去。为了满足题目字母顺序的要求，我们输出之前还要将每个列表按照内部的词排序一下。可以直接用Java的Collections.sort()这个API。

public class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
    	Map<String, List<String>> map=new HashMap<String, List<String>>();
    	for(String str:strs){
    		char[] carr=str.toCharArray();
    		Arrays.sort(carr);
    		String key=new String(carr);
    		List<String> list=map.get(key);
    		if(list==null){
    			list=new Arraylist<String>();
    		}
    		list.add(str);
    		map.put(key, list);
    	}
    	List<List<String>> res= new arraylist<List<String>>();
    	for(String key: map.keySet()){
    		List<String> curr=map.get(key);
    		Collections.sort(curr);
    		res.add(curr);
    	}
    	return res;
    }
 }