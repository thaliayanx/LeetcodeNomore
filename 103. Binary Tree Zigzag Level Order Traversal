103. Binary Tree Zigzag Level Order Traversal
Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

队列迭代
复杂度
时间 O(b^(h+1)-1) 空间 O(b^h)

思路
ZigZag遍历时，奇数层正序记录，偶数层逆序记录。可以通过结果中已有的层数来判断。

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        Queue<TreeNode> q1=new LinkedList<TreeNode>();
        if(root!=null){
            q1.offer(root);
        }
        while(!q1.isEmpty()){
            List<Integer> tmp=new ArrayList<Integer>();
            int size=q1.size();
            for(int i=0; i<size; i++){
                TreeNode head=q1.poll();
                //根据结果中已有的层数控制正序还是逆序
                if(res.size()%2==0){
                    tmp.add(head.val);
                }
                else{
                    tmp.add(0, head.val);
                }
                if(head.left!=null){
                    q1.offer(head.left);
                }
                if(head.right!=null){
                    q1.offer(head.right);
                }
            }
            res.add(tmp);
        }
        return res;
    }
}