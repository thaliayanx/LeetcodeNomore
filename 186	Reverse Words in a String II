186	Reverse Words in a String II 
Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.

The input string does not contain leading or trailing spaces and the words are always separated by a single space.

For example, Given s = "the sky is blue", return "blue is sky the". 
Could you do it in-place without allocating extra space?

双指针交换法
复杂度
时间 O(N) 空间 O(1)

思路
这题就是Java版的Inplace做法了，先反转整个数组，再对每个词反转。

public class Solution {
    public void reverseWords(char[] s) {
		reverse(s, 0, s.length-1);
		int start=0;
		for(int i=0;i<s.length;i++){
			if(s[i]==' '){
				reverse(s, start, i-1);
			}
			start=i+1;
		}
		reverse(s, start, s.length-1);
    }
    public void reverse(char[] s, int start, int end){
    	while(start<end){
    		char tmp=s[start];
    		s[start]=s[end];
    		s[end]=tmp;
    		start++;
    		end--;
    	}
    }
}