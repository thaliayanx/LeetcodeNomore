62. Unique Paths
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

时间 O(NM) 空间 O(NM)

思路
因为要走最短路径，每一步只能向右方或者下方走。所以经过每一个格子路径数只可能源自左方或上方，这就得到了动态规划的递推式，我们用一个二维数组dp储存每个格子的路径数，则dp[i][j]=dp[i-1][j]+dp[i][j-1]。最左边和最上边的路径数都固定为1，代表一直沿着最边缘走的路径。

public class Solution {
    public int uniquePaths(int m, int n) {
    	int[][] res= new int[m][n];
    	for(int i=0; i<m;i++){
    		res[i][0]=1;
    	}
    	for(int i=0; i<n;i++){
    		res[0][i]=1;
    	}
    	for(int i=1;i<m;i++){
    		for(int j=1;j<n;j++){
    			res[i][j]=res[i-1][j]+res[i][j-1];
    		}
    	}
    	return res[m-1][n-1];
    }
}